require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

require 'json'
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']
# ENV['LIBSIGNAL_FFI_PREBUILD_CHECKSUM'] = '...'

platform :ios, podfile_properties['ios.deploymentTarget'] || '14.0'
install! 'cocoapods', :deterministic_uuids => false

prepare_react_native_project!

# Configuration for Flipper (only enabled in Debug mode)
flipper_config = podfile_properties.key?('ios.flipper') && podfile_properties['ios.flipper'] == 'true' ? FlipperConfiguration.enabled(["Debug"]) : FlipperConfiguration.disabled

target 'gardenloftapp' do # Replace 'YourTargetName' with 'gardenloftapp'
  # Use modular headers for specific pods
  use_modular_headers!

  pod 'Firebase/Core', :modular_headers => true
  pod 'Firebase/Auth'
  pod 'Firebase/Firestore', :modular_headers => true
  pod 'Firebase/Analytics'
  pod 'Firebase/Firestore', :modular_headers => true

  # pod 'SignalCoreKit', :git => 'https://github.com/signalapp/SignalCoreKit.git'
  pod 'GoogleUtilities', :modular_headers => true
  pod 'CocoaLumberjack', :modular_headers => true

  # Pods for React Native Firebase
  pod 'RNFBApp', :path => '../node_modules/@react-native-firebase/app'
  pod 'RNFBMessaging', :path => '../node_modules/@react-native-firebase/messaging'
  pod 'RNFBFirestore', :path => '../node_modules/@react-native-firebase/firestore', :modular_headers => true
  
    # gRPC dependencies with modular headers
   
    pod 'gRPC', '1.62.5'
  pod 'gRPC-Core', '1.62.5'

  # Pods for VideoSDK
  pod 'react-native-webrtc', :path => '../node_modules/@videosdk.live/react-native-webrtc'
 

  pod 'React-Core', :path => '../node_modules/react-native/'
pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text'
pod 'React-RCTImage', :path => '../node_modules/react-native/Libraries/Image'
pod 'React-RCTNetwork', :path => '../node_modules/react-native/Libraries/Network'


  # Ensure you include the Expo and React Native auto-linking scripts

  use_expo_modules!
  config = use_native_modules!

  # Dynamic frameworks can be linked dynamically or statically.
  use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties.key?('ios.useFrameworks')
  use_frameworks! :linkage => :static

  $RNFirebaseAsStaticFramework = true
  # Your existing React Native and Expo setup
  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => podfile_properties['expo.jsEngine'] == 'hermes',
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :flipper_configuration => flipper_config
  )

  post_install do |installer|
    react_native_post_install(installer, config[:reactNativePath], :mac_catalyst_enabled => false)
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
      end
    end
  end
end
